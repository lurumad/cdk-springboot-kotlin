name: Deployment workflow

env:
  AWS_REGION: us-east-1
  ENVIRONMENT: dev

on:
  push:
    branches:
      - main

jobs:
  iac:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: CDK Build
        run: |
          cd infra
          npm ci
          npm run build
      - name: CDK Deploy
        run: |
          cd infra
          REGION=${{ env.AWS_REGION }} ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }} ENVIRONMENT=${{ env.ENVIRONMENT }} npx cdk deploy --all --require-approval never --outputs-file ./cdk-outputs.json

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.6
      - name: Run build with Gradle Wrapper
        run: |
          cd app/todos
          ./gradlew build

  publish:
    needs: [ iac, build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.5.1 
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: todos 
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd app/todos
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  

